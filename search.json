[
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "Comparison of Grant Opportunities: Native American Government Bodues vs All Others",
    "section": "",
    "text": "Code\nsuppressWarnings(library(tidyverse))\n\n# pacman package loader\n1if(!require(pacman))\n  install.packages(\"pacman\")\n\n# Install and load required packages\n2pacman::p_load(cowplot, # Tools to add an image to a plot\n               colorspace, # Color palettes\n               dlookr, # Exploratory data analysis\n               formattable, # HTML formatted outputs\n               ggdist, # Visualize distributions and incertainty\n               gghalves, # Cut boxplots in half\n               ggpubr, # Publishable plots\n               ggtext, # Text label geoms (particularly richtext)\n               ggwaffle, # Waffle plots\n               here, # For reproducible working directories\n               knitr, # Rendering R chunks and RMarkdown\n               patchwork, # For adding the image overlayed onto the plot\n               png, # To read in an image\n               scales, # Change scales in ggplot\n               showtext, # To import Google fonts\n               tidytuesdayR, # tidytuesday datasets\n               tidyverse, # Data wrangling\n               waffle) # Waffle plots\n\n\n\n1\n\nThe pacman package is an R package management tool that combines the functionality of base library related functions into intuitively named functions. This line checks if pacman is installed, if not it will be.\n\n2\n\np_load is a function from pacman package to load packaged from a list. If a package is not installed pacman will both install and load a package."
  },
  {
    "objectID": "proposal.html#load-required-packages",
    "href": "proposal.html#load-required-packages",
    "title": "Comparison of Grant Opportunities: Native American Government Bodues vs All Others",
    "section": "",
    "text": "Code\nsuppressWarnings(library(tidyverse))\n\n# pacman package loader\n1if(!require(pacman))\n  install.packages(\"pacman\")\n\n# Install and load required packages\n2pacman::p_load(cowplot, # Tools to add an image to a plot\n               colorspace, # Color palettes\n               dlookr, # Exploratory data analysis\n               formattable, # HTML formatted outputs\n               ggdist, # Visualize distributions and incertainty\n               gghalves, # Cut boxplots in half\n               ggpubr, # Publishable plots\n               ggtext, # Text label geoms (particularly richtext)\n               ggwaffle, # Waffle plots\n               here, # For reproducible working directories\n               knitr, # Rendering R chunks and RMarkdown\n               patchwork, # For adding the image overlayed onto the plot\n               png, # To read in an image\n               scales, # Change scales in ggplot\n               showtext, # To import Google fonts\n               tidytuesdayR, # tidytuesday datasets\n               tidyverse, # Data wrangling\n               waffle) # Waffle plots\n\n\n\n1\n\nThe pacman package is an R package management tool that combines the functionality of base library related functions into intuitively named functions. This line checks if pacman is installed, if not it will be.\n\n2\n\np_load is a function from pacman package to load packaged from a list. If a package is not installed pacman will both install and load a package."
  },
  {
    "objectID": "proposal.html#dataset",
    "href": "proposal.html#dataset",
    "title": "Comparison of Grant Opportunities: Native American Government Bodues vs All Others",
    "section": "Dataset",
    "text": "Dataset\n\n\nCode\n# Original data import\n#tuesdata &lt;- tidytuesdayR::tt_load('2023-10-03')\n\n# Keep desired colummns\ngrant_opportunity_details &lt;- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-10-03/grant_opportunity_details.csv\") |&gt;\n  select(opportunity_id, opportunity_category, posted_date, expected_number_of_awards, estimated_total_program_funding, contains(\"eligibility\"), contains(\"category\"), -category_explanation)\n\n\nThe R4DS Online Learning Community is a community of learners at all skill levels working together to improve our data-science-related skills. They offer free data-related education through book clubs and free live question-answering on Slack, and by curating a dataset every week here at #TidyTuesday.\nThe community is now a fiscally sponsored project of Open Collective Foundation (https://opencollective.foundation), a 501(c)(3) public charity. This means that the R4DS community is now eligible for a number of grants, including some of the grants listed on Grants.gov.\nThe data I used is all grants past and present from that site, which are made available for exploration and vidualization.\nThe datasets given were grants and grant_opportunity_details. I am interested in how eligible Native American Governing bodies are for Federal Funding compared to U.S. State and Local Governments. The grant_opportunity_details dataset has eligibility columns and grant funding categories along with the amount allocated to each grant. In total, there are N = 2000 observations spanning from 2007-2023."
  },
  {
    "objectID": "proposal.html#examine-data",
    "href": "proposal.html#examine-data",
    "title": "Comparison of Grant Opportunities: Native American Government Bodues vs All Others",
    "section": "Examine data",
    "text": "Examine data\n\n\nCode\n# Summary statistics of numerical columns\ngrant_opportunity_details |&gt;\n  describe() |&gt;\n  formattable()\n\n\n\n\n\n\n\ndescribed_variables\n\n\nn\n\n\nna\n\n\nmean\n\n\nsd\n\n\nse_mean\n\n\nIQR\n\n\nskewness\n\n\nkurtosis\n\n\np00\n\n\np01\n\n\np05\n\n\np10\n\n\np20\n\n\np25\n\n\np30\n\n\np40\n\n\np50\n\n\np60\n\n\np70\n\n\np75\n\n\np80\n\n\np90\n\n\np95\n\n\np99\n\n\np100\n\n\n\n\n\n\nopportunity_id\n\n\n2000\n\n\n0\n\n\n3.364976e+05\n\n\n35768.08\n\n\n7.997987e+02\n\n\n13364.75\n\n\n-6.41287\n\n\n45.23978\n\n\n40112\n\n\n103180\n\n\n305985.4\n\n\n327923.4\n\n\n333870.2\n\n\n335731.5\n\n\n337347.4\n\n\n343237.4\n\n\n345324.5\n\n\n347387.8\n\n\n348616.3\n\n\n349096.2\n\n\n349565.4\n\n\n350043.2\n\n\n350226.1\n\n\n350359\n\n\n350390\n\n\n\n\nexpected_number_of_awards\n\n\n619\n\n\n1381\n\n\n1.692787e+03\n\n\n40193.59\n\n\n1.615517e+03\n\n\n27.00\n\n\n24.87351\n\n\n618.79304\n\n\n0\n\n\n0\n\n\n1.0\n\n\n1.0\n\n\n2.0\n\n\n3.0\n\n\n5.0\n\n\n8.0\n\n\n11.0\n\n\n18.8\n\n\n25.0\n\n\n30.0\n\n\n40.0\n\n\n80.0\n\n\n113.2\n\n\n1000\n\n\n999999\n\n\n\n\nestimated_total_program_funding\n\n\n685\n\n\n1315\n\n\n1.295782e+08\n\n\n823468307.24\n\n\n3.146311e+07\n\n\n27500000.00\n\n\n11.49193\n\n\n156.16151\n\n\n0\n\n\n0\n\n\n56596.8\n\n\n366000.0\n\n\n1800000.0\n\n\n2500000.0\n\n\n3040000.0\n\n\n5560000.0\n\n\n8800000.0\n\n\n13000000.0\n\n\n21939800.0\n\n\n30000000.0\n\n\n49100000.0\n\n\n114458000.0\n\n\n250000000.0\n\n\n3338200000\n\n\n13970000000\n\n\n\n\n\n\n\nCode\n# Diagnosing issues with the data\ngrant_opportunity_details |&gt;\n  diagnose() |&gt;\n  formattable()\n\n\n\n\n\n\n\nvariables\n\n\ntypes\n\n\nmissing_count\n\n\nmissing_percent\n\n\nunique_count\n\n\nunique_rate\n\n\n\n\n\n\nopportunity_id\n\n\nnumeric\n\n\n0\n\n\n0.00\n\n\n2000\n\n\n1.0000\n\n\n\n\nopportunity_category\n\n\ncharacter\n\n\n0\n\n\n0.00\n\n\n5\n\n\n0.0025\n\n\n\n\nposted_date\n\n\nDate\n\n\n0\n\n\n0.00\n\n\n680\n\n\n0.3400\n\n\n\n\nexpected_number_of_awards\n\n\nnumeric\n\n\n1381\n\n\n69.05\n\n\n81\n\n\n0.0405\n\n\n\n\nestimated_total_program_funding\n\n\nnumeric\n\n\n1315\n\n\n65.75\n\n\n284\n\n\n0.1420\n\n\n\n\neligibility_individuals\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\neligibility_state_governments\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\neligibility_county_governments\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\neligibility_independent_school_districts\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\neligibility_city_or_township_governments\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\neligibility_special_district_governments\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\neligibility_native_american_tribal_governments_federally_recognized\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\neligibility_native_american_tribal_organizations_other\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\neligibility_nonprofits_501c3\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\neligibility_nonprofits_non_501c3\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\neligibility_for_profit\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\neligibility_small_businesses\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\neligibility_private_institutions_of_higher_education\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\neligibility_public_institutions_of_higher_education\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\neligibility_public_indian_housing_authorities\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\neligibility_others\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\neligibility_unrestricted\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\nadditional_information_on_eligibility\n\n\ncharacter\n\n\n321\n\n\n16.05\n\n\n620\n\n\n0.3100\n\n\n\n\nopportunity_category_explanation\n\n\ncharacter\n\n\n1948\n\n\n97.40\n\n\n42\n\n\n0.0210\n\n\n\n\ncategory_agriculture\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_arts\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_business\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_community_development\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_consumer_protection\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_disaster\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_education\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_employment\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_energy\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_environment\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_food\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_health\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_housing\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_humanities\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_iija\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_income_security\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_info\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_law\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_natural_resources\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_opportunity_zone\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_regional_development\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_science\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_transportation\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\ncategory_other\n\n\nlogical\n\n\n0\n\n\n0.00\n\n\n2\n\n\n0.0010\n\n\n\n\n\n\n\nCode\ngrant_opportunity_details |&gt; nrow()\n\n\n[1] 2000"
  },
  {
    "objectID": "proposal.html#questions",
    "href": "proposal.html#questions",
    "title": "Comparison of Grant Opportunities: Native American Government Bodues vs All Others",
    "section": "Questions",
    "text": "Questions\n\nQuestion 1:\nIs there equity in Federal Government access?\n\n\nQuestion 2:\nHow much money is available to Native American Governing bodies across funding category?"
  },
  {
    "objectID": "proposal.html#analysis-plan",
    "href": "proposal.html#analysis-plan",
    "title": "Comparison of Grant Opportunities: Native American Government Bodues vs All Others",
    "section": "Analysis plan",
    "text": "Analysis plan\nFor Question 1, I will explore to what extend federal grant funding categories are equally available to Indigenous American governing bodies vs State and Local Governments. This will be done by comparing the proportional difference between funding access only for categories where inequity exists. I will also show the distribution of grants and their dollar allocation that Indigenous American governing bodies have access to. The data are heavily skewed towards 2020-2023 (very few observations &lt;2018), so I will only focus on grants from 2018-2023. Further, 65.75% of rows have no values for dollar amounts, so they will not be considered, nor will rows with $0.\nI will create a composite plot providing a visual comparison of grant opportunities, focusing on disparities between Native American government bodies and other entities. It features a scatter plot that shows grant awards over time, with each data point representing a grant and its funding (size = grant size, color = Native American Governing bodies only). The plot will be augmented by waffle charts depicting funding distribution, using color-coded segments, and will be accompanied by informative titles, subtitles, and legends to convey the contrast in grant opportunities between the two groups succinctly.\nFor the waffle chart, here are the splits in available funding for Indigenous American governing bodies and State and Local Governments, but only for Food, Health, and Social Services and Community Development and Arts:\n\n\n\n\n\n\n\neligibility_group\n\n\nprop\n\n\n\n\n\n\nGovernment Entities (Excluding Native American and Indian Entities)\n\n\n86\n\n\n\n\nNative American and Indian Entities\n\n\n14\n\n\n\n\n\n\n\n\n\n\n\n\neligibility_group\n\n\nprop\n\n\n\n\n\n\nGovernment Entities (Excluding Native American and Indian Entities)\n\n\n99\n\n\n\n\nNative American and Indian Entities\n\n\n1\n\n\n\n\n\n\n\nFor Question 2, I will explore which grants provide the most opportunity (number and $ amount) to Native American government bodies. I will specifically provide a summary of the grant count and average dollar amount within each funding category exclusively for Native American government bodies.\nI will create a polar bar chart, with bar height as average dollar amount, and fill color as count.\n\nSteps:\n\nData Preprocessing and Transformation Steps:\n\nPivoting Data:\n\n\nUse the pivot_longer function to reshape the data, separating eligibility-related columns and category-related columns into long format for ease of analysis.\nStore the results in the variables eligibility_var, eligibility_value, category, and category_value.\n\n\nCreating Additional Variables:\n\n\nCreate a year variable by extracting the year from the posted_date column.\nCreate a date variable by rounding the posted_date to the nearest month using the floor_date function.\n\n\nCategorizing Data:\n\n\nCategorize the grant opportunities into broader categories using the category column. This step involves grouping related categories together for a higher-level analysis.\nDefine a new variable category_group based on specific category groupings. Categories that don’t fit into predefined groups are labeled as “Other.”\n\n\nFactor Conversion:\n\n\nConvert the category_group variable into a factor with predefined levels to ensure consistent ordering for analysis.\n\n\nEligibility Grouping:\n\n\nGroup eligibility-related variables based on the type of eligible entities. This step consolidates various eligibility criteria into more manageable categories.\nDefine a new variable eligibility_group to represent these categories.\nLabel unclassified eligibility criteria as “Unspecified.”\n\n\nCleaning Variable Names:\n\n\nRemove the “eligibility_” and “category_” prefixes from variable names, simplifying the column names for clarity.\n\n\nCalculating Individual Grant Amount:\n\n\nCalculate the estimated individual grant amount (amount_individ) by dividing the estimated total program funding by the expected number of awards. This provides insights into the potential grant size per recipient.\n\n\nFiltering Data:\n\n\nFilter the dataset to exclude rows with missing individual grant amounts (amount_individ), eligibility or category values that are not TRUE, and estimated total program funding equal to zero. This ensures that only relevant data is considered for analysis."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This project was developed by Greg Chism For INFO 526 - Data Analysis and Visualization at the University of Arizona, taught by Dr. Greg Chism. The team is comprised of the following team members.\n\nGreg Chism: Professor of Practice @ UArizona iSchool, Doctorate in Ento & Insect Sci, R/RStudio Evangelist."
  },
  {
    "objectID": "presentation.html#quarto",
    "href": "presentation.html#quarto",
    "title": "Project title",
    "section": "Quarto",
    "text": "Quarto\n\nThe presentation is created using the Quarto CLI\n## sets the start of a new slide"
  },
  {
    "objectID": "presentation.html#layouts",
    "href": "presentation.html#layouts",
    "title": "Project title",
    "section": "Layouts",
    "text": "Layouts\nYou can use plain text\n\n\n\nor bullet points1\n\n\nor in two columns\n\n\n\nlike\nthis\n\nAnd add footnotes"
  },
  {
    "objectID": "presentation.html#code",
    "href": "presentation.html#code",
    "title": "Project title",
    "section": "Code",
    "text": "Code\n\n\n# A tibble: 2 × 5\n  term        estimate std.error statistic       p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n1 (Intercept)   25.3      3.08        8.22 0.00000000358\n2 speed         -0.116    0.0642     -1.81 0.0806       \n\n\n# A tibble: 1 × 12\n  r.squared adj.r.squared sigma statistic p.value    df logLik   AIC   BIC\n      &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1    0.0983        0.0682  5.82      3.27  0.0806     1  -101.  207.  212.\n# ℹ 3 more variables: deviance &lt;dbl&gt;, df.residual &lt;int&gt;, nobs &lt;int&gt;"
  },
  {
    "objectID": "presentation.html#plots",
    "href": "presentation.html#plots",
    "title": "Project title",
    "section": "Plots",
    "text": "Plots"
  },
  {
    "objectID": "presentation.html#plot-and-text",
    "href": "presentation.html#plot-and-text",
    "title": "Project title",
    "section": "Plot and text",
    "text": "Plot and text\n\n\n\nSome text\ngoes here"
  },
  {
    "objectID": "presentation.html#tables",
    "href": "presentation.html#tables",
    "title": "Project title",
    "section": "Tables",
    "text": "Tables\nIf you want to generate a table, make sure it is in the HTML format (instead of Markdown or other formats), e.g.,\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\n\n\n\n\nAdelie\nTorgersen\n39.1\n18.7\n181\n3750\nmale\n\n\nAdelie\nTorgersen\n39.5\n17.4\n186\n3800\nfemale\n\n\nAdelie\nTorgersen\n40.3\n18.0\n195\n3250\nfemale\n\n\nAdelie\nTorgersen\nNA\nNA\nNA\nNA\nNA\n\n\nAdelie\nTorgersen\n36.7\n19.3\n193\n3450\nfemale\n\n\nAdelie\nTorgersen\n39.3\n20.6\n190\n3650\nmale"
  },
  {
    "objectID": "presentation.html#images",
    "href": "presentation.html#images",
    "title": "Project title",
    "section": "Images",
    "text": "Images\n\nImage credit: Danielle Navarro, Percolate."
  },
  {
    "objectID": "presentation.html#math-expressions",
    "href": "presentation.html#math-expressions",
    "title": "Project title",
    "section": "Math Expressions",
    "text": "Math Expressions\nYou can write LaTeX math expressions inside a pair of dollar signs, e.g. $\\alpha+\\beta$ renders \\(\\alpha + \\beta\\). You can use the display style with double dollar signs:\n$$\\bar{X}=\\frac{1}{n}\\sum_{i=1}^nX_i$$\n\\[\n\\bar{X}=\\frac{1}{n}\\sum_{i=1}^nX_i\n\\]\nLimitations:\n\nThe source code of a LaTeX math expression must be in one line, unless it is inside a pair of double dollar signs, in which case the starting $$ must appear in the very beginning of a line, followed immediately by a non-space character, and the ending $$ must be at the end of a line, led by a non-space character;\nThere should not be spaces after the opening $ or before the closing $."
  },
  {
    "objectID": "presentation.html#feeling-adventurous",
    "href": "presentation.html#feeling-adventurous",
    "title": "Project title",
    "section": "Feeling adventurous?",
    "text": "Feeling adventurous?\n\nYou are welcomed to use the default styling of the slides. In fact, that’s what I expect majority of you will do. You will differentiate yourself with the content of your presentation.\nBut some of you might want to play around with slide styling. Some solutions for this can be found at https://quarto.org/docs/presentations/revealjs."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Equity in Federal Grant Allocation: Analyzing Disparities Among Eligible Groups",
    "section": "",
    "text": "In a diverse and evolving society, equitable distribution of resources, particularly in the context of federal grant funding, is of paramount importance. This project, titled “Equity in Federal Grant Allocation: Analyzing Disparities Among Eligible Groups,” aims to investigate the allocation of federal grant funds across various eligible groups to shed light on potential disparities and advocate for more equitable resource distribution."
  },
  {
    "objectID": "index.html#abstract",
    "href": "index.html#abstract",
    "title": "Equity in Federal Grant Allocation: Analyzing Disparities Among Eligible Groups",
    "section": "",
    "text": "In a diverse and evolving society, equitable distribution of resources, particularly in the context of federal grant funding, is of paramount importance. This project, titled “Equity in Federal Grant Allocation: Analyzing Disparities Among Eligible Groups,” aims to investigate the allocation of federal grant funds across various eligible groups to shed light on potential disparities and advocate for more equitable resource distribution."
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Equity in Federal Grant Allocation: Analyzing Disparities Among Eligible Groups",
    "section": "Introduction",
    "text": "Introduction\nThe study employs a comprehensive dataset of federal grant allocations over multiple years, encompassing a wide range of eligible groups, such as state and local governments, tribal organizations, and non-profit entities. Using advanced data analysis techniques, we explore patterns and trends in funding distribution to discern potential inequalities.\nOur research methodology encompasses statistical analysis, data visualization, and demographic profiling. By dissecting these findings, we aim to uncover systematic differences in grant funding allocation based on eligibility criteria, such as the type of organization, geographical location, and program category.\nThe results of this study hold significant implications for policy-makers, grant administrators, and advocacy groups. By identifying and quantifying disparities, we seek to inform evidence-based policy recommendations aimed at achieving more equitable distribution of federal grant resources. Moreover, this research contributes to the broader dialogue on social justice and inclusive public policy, emphasizing the need for equitable opportunities and resources for all eligible groups.\nUltimately, our project strives to promote fairness and equal access to federal grant funding, contributing to the overarching goal of building a more equitable and inclusive society."
  },
  {
    "objectID": "index.html#question-1-is-there-equity-in-federal-government-access",
    "href": "index.html#question-1-is-there-equity-in-federal-government-access",
    "title": "Equity in Federal Grant Allocation: Analyzing Disparities Among Eligible Groups",
    "section": "Question 1: Is there equity in Federal Government access?",
    "text": "Question 1: Is there equity in Federal Government access?\n\nIntroduction:\nThe inequity in federal government grant opportunities is not a new concept, now am I addressing conclusively how to correct it. In this first question, I ask, in the Federal Grants available to the R4DS community, to what extent is their equity between Indigenous American governmental bodies and State and Local Governments. The answer is significant towards whether the diverse R4DS community will have equal opportunity towards grant funding within and outside of the organization.\nThe first question utilizes variables in a dataset that represents federal grants that the R4DS community has access to now that it is fiscally sponsored project of Open Collective Foundation (https://opencollective.foundation), a 501(c)(3) public charity.\n\n\nApproach\nTo address this question, I created a composite figure that serves as a comprehensive visual representation of the grant landscape, meticulously comparing grant opportunities between Native American government bodies and other entities. By amalgamating scatter plots, waffle charts, and informative legends, this figure succinctly conveys key insights into the distribution of grant awards and funding levels across different time periods and categories. The striking contrast in funding patterns, highlighted through color-coded segments and log-transformed grant counts, underscores the significance of disparities in grant opportunities between Native American government bodies and their counterparts.\n\n\nAnalysis\n\n\n\n\n\n\n\nDiscussion:\nThe plot shows that there is serious inequity between Native American government bodies and State and Local governments, but only in the Food, Health, & Social Services and Community Development & Arts funding categories. This was actually surprising, since I initially created seemingly arbitrary category groupings, but they seemed to be appropriate. The most damning inequity is that Native American government bodies has access to $371,670,350 less than State and Local governments. Proportionally, the inequity in Community Development & Arts is much worse (~ 1/99), which is especially sad as these funding grants would aid seriously impoverished Native American tribal reservations.\nBy presenting a holistic view of grant data, this figure enables policymakers, grant administrators, and researchers to gain a deeper understanding of the challenges faced by Native American government bodies in accessing Federal grant funding, particularly in specific categories. This visualization serves as a powerful tool for informed decision-making, offering valuable insights into the allocation of resources and the potential areas where targeted support may be needed to address these disparities and promote equitable access to grant opportunities."
  },
  {
    "objectID": "index.html#question-2-how-much-money-is-available-to-native-american-governing-bodies-across-funding-category",
    "href": "index.html#question-2-how-much-money-is-available-to-native-american-governing-bodies-across-funding-category",
    "title": "Equity in Federal Grant Allocation: Analyzing Disparities Among Eligible Groups",
    "section": "Question 2: How much money is available to Native American Governing bodies across funding category?",
    "text": "Question 2: How much money is available to Native American Governing bodies across funding category?\n\nIntroduction:\nFrom Question 1, we know that there is inequity in available Federal Grant funding. I was then interested in determining what funding categories funding available for Native American Governing bodies. Historically, Health, Agriculture, and Social Services has had a lions share of federal grant funding. It is important to determine whether this holds true for Native American Governing bodies, especially since we know that there is inequity in our Food, Health, & Social Services category.\nIn light of the established inequities in available Federal Grant funding, our exploration extends to assess the allocation of funding across specific categories for Native American Governing bodies. Historically, the domains of Health, Agriculture, and Social Services have been recipients of substantial Federal Grant funding, asserting their prominence in resource distribution. To address the critical question of whether these trends persist within the context of Native American Governing bodies, our analysis zooms in on the funding landscape within these categories. This scrutiny becomes particularly pertinent, given the previously identified inequities within the Food, Health, & Social Services category. To unravel these dynamics, we employ a unique polar plot visualization, shedding light on the nuances of funding distribution, grant quantities, and potential areas requiring focused attention within this specific context.\n\n\nApproach\nTo quantify the available funding for Native American Governing bodies across diverse funding categories, I employed a systematic approach. Initially, I meticulously filtered the data to isolate records pertinent to these entities, ensuring the analysis exclusively revolved around Native American Governing bodies. Subsequently, I applied logarithmic transformation (\\(\\log_{10}\\)) to the estimated total program funding values to standardize the funding metrics and facilitate effective visualization.\nWith the data thus prepared, I proceeded to group and summarize it. Specifically, I grouped the data based on “category groups,” each representing a distinct funding category. Within these groups, I computed the cumulative funding amount, providing insight into the financial allocation for each category. Simultaneously, I tallied the number of grants within each category. This comprehensive data preparation and summarization paved the way for an innovative polar plot visualization, revealing the funding distribution and grant quantity disparities across categories. In essence, this approach amalgamated data transformation, grouping, summarization, and creative visualization to offer a succinct and illuminating analysis of funding accessibility for Native American Governing bodies in 2023.\n\n\n\n\n\n\n\nDiscussion\nThis plot provides a unique and insightful perspective on the distribution of available funding for Native American and Indian Entities in the year 2023 across different grant categories. It accomplishes this by visualizing the total funding amounts (represented by the height of the bars) allocated to various “category groups.” Each bar is further divided into segments, representing the number of grants (indicated by the fill color intensity). The dashed lines extending from the center of the plot to the outer edge create a radial effect, emphasizing the scale of funding variation within each category group. The choice of a polar coordinate system adds an artistic touch to the visualization, making it visually appealing and easy to interpret.\nThe significance of this plot lies in its ability to provide a clear and comprehensive understanding of funding distribution patterns for Native American and Indian Entities in 2023. It allows viewers to quickly identify which category groups receive the most and least funding while also highlighting the variation in the number of grants within each category. The polar arrangement and the use of color intensity make it easy to compare funding levels across different categories, revealing potential areas of focus for policymakers, grant administrators, and organizations working with Native American and Indian Entities. Overall, this plot offers a visually engaging and informative representation of funding disparities and can help guide decision-making processes to promote equitable allocation of resources among different grant categories."
  },
  {
    "objectID": "riseOfAIPlot.html",
    "href": "riseOfAIPlot.html",
    "title": "Reproducing Rise of AI over 8 decades plot",
    "section": "",
    "text": "suppressWarnings(library(tidyverse))\n\n# pacman package loader\n1if(!require(pacman))\n  install.packages(\"pacman\")\n\n# Install and load required packages\n2pacman::p_load(cowplot, # Tools to add an image to a plot\n               dlookr, # Exploratory data analysis\n               formattable, # HTML formatted outputs\n               ggtext, # Text label geoms (particularly richtext)\n               here, # For reproducible working directories\n               knitr, # Rendering R chunks and RMarkdown\n               patchwork, # For adding the image overlayed onto the plot\n               png, # To read in an image\n               showtext, # To import Google fonts\n               tidyverse) # Data wrangling\n\n\n1\n\nThe pacman package is an R package management tool that combines the functionality of base library related functions into intuitively named functions. This line checks if pacman is installed, if not it will be.\n\n2\n\np_load is a function from pacman package to load packaged from a list. If a package is not installed pacman will both install and load a package."
  },
  {
    "objectID": "riseOfAIPlot.html#load-required-packages",
    "href": "riseOfAIPlot.html#load-required-packages",
    "title": "Reproducing Rise of AI over 8 decades plot",
    "section": "",
    "text": "suppressWarnings(library(tidyverse))\n\n# pacman package loader\n1if(!require(pacman))\n  install.packages(\"pacman\")\n\n# Install and load required packages\n2pacman::p_load(cowplot, # Tools to add an image to a plot\n               dlookr, # Exploratory data analysis\n               formattable, # HTML formatted outputs\n               ggtext, # Text label geoms (particularly richtext)\n               here, # For reproducible working directories\n               knitr, # Rendering R chunks and RMarkdown\n               patchwork, # For adding the image overlayed onto the plot\n               png, # To read in an image\n               showtext, # To import Google fonts\n               tidyverse) # Data wrangling\n\n\n1\n\nThe pacman package is an R package management tool that combines the functionality of base library related functions into intuitively named functions. This line checks if pacman is installed, if not it will be.\n\n2\n\np_load is a function from pacman package to load packaged from a list. If a package is not installed pacman will both install and load a package."
  },
  {
    "objectID": "riseOfAIPlot.html#dataset-setup",
    "href": "riseOfAIPlot.html#dataset-setup",
    "title": "Reproducing Rise of AI over 8 decades plot",
    "section": "Dataset Setup",
    "text": "Dataset Setup\n\n1data &lt;- read_csv(here(\"data\", \"trendsInLLMs.csv\")) |&gt;\n2  janitor::clean_names() |&gt;\n3  select(system, publication_date, training_compute_flop, domain) |&gt;\n  drop_na() |&gt; \n  mutate(training_compute_flop = as.numeric(training_compute_flop), \n         publication_date = mdy(publication_date),\n4         publication_date = if_else(publication_date &gt; today(), publication_date - years(100), publication_date),\n5    domain = case_when(\n    domain %in% c(\"Vision\", \"Games\", \"Drawing\", \"Language\") ~ domain,\n    domain %in% \"Speech\" ~ \"Language\",\n    TRUE ~ \"Other\"\n  ),\n6  domain = factor(domain) |&gt; fct_relevel(c(\"Vision\", \"Games\", \"Drawing\", \"Language\", \"Other\"))\n  )\n\ndata |&gt; \n7  glimpse()\n\ndata |&gt; \n  diagnose() |&gt;\n8  formattable()\n\ndata |&gt; \n  describe() |&gt;\n9  formattable()\n\n\n1\n\nThe data can be found open source at the following link.\n\n2\n\nClean the names\n\n3\n\nSelect only the relevant columns for analysis.\n\n4\n\nConvert dates that are before 2000 to the 1900s.\n\n5\n\ncase_when loop that groups domains.\n\n6\n\nReorder the factors in the domain column.\n\n7\n\nThere are 4 relevant columns, the AI system, the publication data, the training computation FLOP, and the domain.\n\n8\n\nNo missing values, data seems clean\n\n9\n\nSummary statistics are as expected for exponential data\n\n\n\n\nRows: 186\nColumns: 4\n$ system                &lt;chr&gt; \"Falcon 180B\", \"Swift\", \"Jais\", \"Llama 2\", \"Clau…\n$ publication_date      &lt;date&gt; 2023-09-06, 2023-08-30, 2023-08-29, 2023-07-18,…\n$ training_compute_flop &lt;dbl&gt; 3.78e+24, 5.34e+16, 3.08e+22, 9.00e+23, 3.30e+25…\n$ domain                &lt;fct&gt; Language, Other, Language, Language, Language, L…\n\n\n\n\n\n\n\nvariables\n\n\ntypes\n\n\nmissing_count\n\n\nmissing_percent\n\n\nunique_count\n\n\nunique_rate\n\n\n\n\n\n\nsystem\n\n\ncharacter\n\n\n0\n\n\n0\n\n\n186\n\n\n1.00000000\n\n\n\n\npublication_date\n\n\nDate\n\n\n0\n\n\n0\n\n\n162\n\n\n0.87096774\n\n\n\n\ntraining_compute_flop\n\n\nnumeric\n\n\n0\n\n\n0\n\n\n182\n\n\n0.97849462\n\n\n\n\ndomain\n\n\nfactor\n\n\n0\n\n\n0\n\n\n5\n\n\n0.02688172\n\n\n\n\n\n\n\n\n\ndescribed_variables\n\n\nn\n\n\nna\n\n\nmean\n\n\nsd\n\n\nse_mean\n\n\nIQR\n\n\nskewness\n\n\nkurtosis\n\n\np00\n\n\np01\n\n\np05\n\n\np10\n\n\np20\n\n\np25\n\n\np30\n\n\np40\n\n\np50\n\n\np60\n\n\np70\n\n\np75\n\n\np80\n\n\np90\n\n\np95\n\n\np99\n\n\np100\n\n\n\n\n\n\ntraining_compute_flop\n\n\n186\n\n\n0\n\n\n4.342449e+23\n\n\n2.924188e+24\n\n\n2.144118e+23\n\n\n3.24486e+22\n\n\n9.530386\n\n\n96.68769\n\n\n40\n\n\n592235\n\n\n1.66e+10\n\n\n7.69e+13\n\n\n9.69e+16\n\n\n1.395e+18\n\n\n6.82e+18\n\n\n9.39e+19\n\n\n8.46e+20\n\n\n4.42e+21\n\n\n1.415e+22\n\n\n3.245e+22\n\n\n5e+22\n\n\n3.14e+23\n\n\n5.695e+23\n\n\n9.389e+24\n\n\n3.3e+25"
  },
  {
    "objectID": "riseOfAIPlot.html#reproduced-plot-code",
    "href": "riseOfAIPlot.html#reproduced-plot-code",
    "title": "Reproducing Rise of AI over 8 decades plot",
    "section": "Reproduced plot & code",
    "text": "Reproduced plot & code\n\nPlot\n\n\n\n\n\n\n\nCode\n\n\nShow the code\n# Y-axis breaks\n1breaks_vals &lt;- as.vector(pretty(log10(data$training_compute_flop), n = 13))\n\n# Y-axis labels\n2labels_vals &lt;- as.vector(c(\"0\", \"10 FLOP\", \"1,000 FLOP\",\n                           \"100,000 FLOP\", \"10 million FLOP\",\n                           \"1 billion FLOP\", \"100 billion FLOP\",\n                           \"10 trillion FLOP\", \"1 petaFLOP = 1 quadrillion FLOP\", \n                           \"100 petaFLOP\", \"10,000 petaFLOP\", \n                           \"1 million petaFLOP\", \"100 million petaFLOP\", \n                           \"10 billion petaFLOP\"))\n\n# Add font families \n3font_add_google(\"Playfair Display\", \"Playfair Display\")\nfont_add_google(\"Open Sans\", \"Open Sans\")\nshowtext_auto()\n\n# Plot\nplot &lt;- data |&gt;\n4  ggplot(aes(x = publication_date, y = log10(training_compute_flop), color = domain)) +\n5  geom_segment(x = as.Date(\"1950-01-01\"), xend = as.Date(\"1950-01-01\"),\n               y = log10(0.1), yend = log10(1e+25),\n               linewidth = 0.05, linetype = 3, color = \"#eaeaea\") +\n  geom_segment(x = as.Date(\"1960-01-01\"), xend = as.Date(\"1960-01-01\"),\n               y = log10(0.1), yend = log10(1e+25),\n               linewidth = 0.05, linetype = 3, color = \"#eaeaea\") +\n  geom_segment(x = as.Date(\"1970-01-01\"), xend = as.Date(\"1970-01-01\"),\n               y = log10(0.1), yend = log10(1e+25),\n               linewidth = 0.05, linetype = 3, color = \"#eaeaea\") +\n  geom_segment(x = as.Date(\"1980-01-01\"), xend = as.Date(\"1980-01-01\"),\n               y = log10(0.1), yend = log10(1e+25),\n               linewidth = 0.05, linetype = 3, color = \"#eaeaea\") +\n  geom_segment(x = as.Date(\"1990-01-01\"), xend = as.Date(\"1990-01-01\"),\n               y = log10(0.1), yend = log10(1e+25),\n               linewidth = 0.05, linetype = 3, color = \"#eaeaea\") +\n  geom_segment(x = as.Date(\"2000-01-01\"), xend = as.Date(\"2000-01-01\"),\n               y = log10(0.1), yend = log10(1e+25),\n               linewidth = 0.05, linetype = 3, color = \"#eaeaea\") +\n  geom_segment(x = as.Date(\"2010-01-01\"), xend = as.Date(\"2010-01-01\"),\n               y = log10(0.1), yend = log10(1e+25),\n               linewidth = 0.05, linetype = 3, color = \"#eaeaea\") +\n  geom_segment(x = as.Date(\"2020-01-01\"), xend = as.Date(\"2020-01-01\"),\n               y = log10(0.1), yend = log10(1e+25),\n               linewidth = 0.05, linetype = 3, color = \"#eaeaea\") +\n  geom_segment(x = as.Date(\"1941-01-01\"), xend = as.Date(\"2025-01-01\"),\n               y = log10(6), yend = log10(6),\n               linewidth = 0.05, linetype = 2, color = \"#eaeaea\") +\n  geom_segment(x = as.Date(\"1941-01-01\"), xend = as.Date(\"2025-01-01\"),\n               y = log10(6e+2), yend = log10(6e+2),\n               linewidth = 0.05, linetype = 2, color = \"#eaeaea\") +\n  geom_segment(x = as.Date(\"1941-01-01\"), xend = as.Date(\"2025-01-01\"),\n               y = log10(6e+4), yend = log10(6e+4),\n               linewidth = 0.05, linetype = 2, color = \"#eaeaea\") +\n  geom_segment(x = as.Date(\"1941-01-01\"), xend = as.Date(\"2025-01-01\"),\n               y = log10(6e+6), yend = log10(6e+6),\n               linewidth = 0.05, linetype = 2, color = \"#eaeaea\") +\n  geom_segment(x = as.Date(\"1941-01-01\"), xend = as.Date(\"2025-01-01\"),\n               y = log10(6e+8), yend = log10(6e+8),\n               linewidth = 0.05, linetype = 2, color = \"#eaeaea\") +\n  geom_segment(x = as.Date(\"1941-01-01\"), xend = as.Date(\"2025-01-01\"),\n               y = log10(6e+10), yend = log10(6e+10),\n               linewidth = 0.05, linetype = 2, color = \"#eaeaea\") +\n  geom_segment(x = as.Date(\"1941-01-01\"), xend = as.Date(\"2025-01-01\"),\n               y = log10(6e+12), yend = log10(6e+12),\n               linewidth = 0.05, linetype = 2, color = \"#eaeaea\") +\n  geom_segment(x = as.Date(\"1941-01-01\"), xend = as.Date(\"2025-01-01\"),\n               y = log10(6e+14), yend = log10(6e+14),\n               linewidth = 0.05, linetype = 2, color = \"#eaeaea\") +\n  geom_segment(x = as.Date(\"1941-01-01\"), xend = as.Date(\"2025-01-01\"),\n               y = log10(6e+16), yend = log10(6e+16),\n               linewidth = 0.05, linetype = 2, color = \"#eaeaea\") +\n  geom_segment(x = as.Date(\"1941-01-01\"), xend = as.Date(\"2025-01-01\"),\n               y = log10(6e+18), yend = log10(6e+18),\n               linewidth = 0.05, linetype = 2, color = \"#eaeaea\") +\n  geom_segment(x = as.Date(\"1941-01-01\"), xend = as.Date(\"2025-01-01\"),\n               y = log10(6e+20), yend = log10(6e+20),\n               linewidth = 0.05, linetype = 2, color = \"#eaeaea\") +\n  geom_segment(x = as.Date(\"1941-01-01\"), xend = as.Date(\"2025-01-01\"),\n               y = log10(6e+22), yend = log10(6e+22),\n               linewidth = 0.05, linetype = 2, color = \"#eaeaea\") +\n  geom_segment(x = as.Date(\"1941-01-01\"), xend = as.Date(\"2025-01-01\"),\n               y = log10(6e+24), yend = log10(6e+24),\n               linewidth = 0.05, linetype = 2, color = \"#eaeaea\") +\n6  geom_segment(x = as.Date(\"1953-01-01\"), xend = as.Date(\"2025-01-01\"),\n               y = log10(2.5), yend = log10(2.5),\n               linewidth = 0.03, linetype = 1, color = \"#999999\") + \n7  geom_segment(x = as.Date(\"1940-01-01\"), xend = as.Date(\"1940-01-01\"),\n              y = log10(0.09), yend = log10(0.13),\n               linewidth = 0.03, linetype = 1, color = \"#999999\") + \n  geom_segment(x = as.Date(\"1950-01-01\"), xend = as.Date(\"1950-01-01\"),\n              y = log10(0.09), yend = log10(0.13),\n               linewidth = 0.03, linetype = 1, color = \"#999999\") +\n  geom_segment(x = as.Date(\"1960-01-01\"), xend = as.Date(\"1960-01-01\"),\n              y = log10(0.09), yend = log10(0.13),\n               linewidth = 0.03, linetype = 1, color = \"#999999\") +\n  geom_segment(x = as.Date(\"1970-01-01\"), xend = as.Date(\"1970-01-01\"),\n              y = log10(0.09), yend = log10(0.13),\n               linewidth = 0.03, linetype = 1, color = \"#999999\") +\n  geom_segment(x = as.Date(\"1980-01-01\"), xend = as.Date(\"1980-01-01\"),\n              y = log10(0.09), yend = log10(0.13),\n               linewidth = 0.03, linetype = 1, color = \"#999999\") +\n  geom_segment(x = as.Date(\"1990-01-01\"), xend = as.Date(\"1990-01-01\"),\n              y = log10(0.09), yend = log10(0.13),\n               linewidth = 0.03, linetype = 1, color = \"#999999\") +\n  geom_segment(x = as.Date(\"2000-01-01\"), xend = as.Date(\"2000-01-01\"),\n              y = log10(0.09), yend = log10(0.13),\n               linewidth = 0.03, linetype = 1, color = \"#999999\") +\n  geom_segment(x = as.Date(\"2010-01-01\"), xend = as.Date(\"2010-01-01\"),\n              y = log10(0.09), yend = log10(0.13),\n               linewidth = 0.03, linetype = 1, color = \"#999999\") +\n  geom_segment(x = as.Date(\"2020-01-01\"), xend = as.Date(\"2020-01-01\"),\n              y = log10(0.09), yend = log10(0.13),\n               linewidth = 0.03, linetype = 1, color = \"#999999\") +\n8  geom_point(alpha = 0.85) +\n9  geom_curve(\n    aes(x = as.Date(\"1980-04-01\"), y = log10(1.75e+07),\n        xend = as.Date(\"1980-04-01\"), yend = log10(1.5e+08)),\n    curvature = -0.2,\n    arrow = arrow(length = unit(0.005, \"npc\"), type = \"closed\"),\n    color = \"#B4477A\",\n    linewidth = 0.1\n  ) +\n  geom_curve(\n    aes(x = as.Date(\"2003-07-15\"), y = log10(5e+16),\n        xend = as.Date(\"2012-02-27\"), yend = log10(4.5e+17)),\n    curvature = 0.2,\n    arrow = arrow(length = unit(0.005, \"npc\"), type = \"closed\"),\n    color = \"#B4477A\",\n    linewidth = 0.1\n  ) +\n  geom_curve(\n    aes(x = as.Date(\"2006-06-15\"), y = log10(1.2e+18),\n        xend = as.Date(\"2019-06-19\"), yend = log10(4e+19)),\n    curvature = 0.2,\n    arrow = arrow(length = unit(0.005, \"npc\"), type = \"closed\"),\n    color = \"#4B946C\",\n    linewidth = 0.1\n    ) +\n  geom_curve(\n    aes(x = as.Date(\"2009-06-15\"), y = log10(1.5e+19),\n        xend = as.Date(\"2019-07-15\"), yend = log10(9e+19)),\n    curvature = 0.2,\n    arrow = arrow(length = unit(0.005, \"npc\"), type = \"closed\"),\n    color = \"#9674B0\",\n    linewidth = 0.1\n  ) +\n  geom_curve(\n    aes(x = as.Date(\"2009-06-15\"), y = log10(4.5e+20),\n        xend = as.Date(\"2015-06-27\"), yend = log10(1.33e+21)),\n    curvature = 0.2,\n    arrow = arrow(length = unit(0.005, \"npc\"), type = \"closed\"),\n    color = \"#4B946C\",\n    linewidth = 0.1\n    ) +\n  geom_curve(\n    aes(x = as.Date(\"2010-02-15\"), y = log10(1.5e+22),\n        xend = as.Date(\"2021-03-21\"), yend = log10(7.90e+21)),\n    curvature = -0.1,\n    arrow = arrow(length = unit(0.005, \"npc\"), type = \"closed\"),\n    color = \"#476589\",\n    linewidth = 0.1\n    ) +\n  geom_curve(\n    aes(x = as.Date(\"2011-03-15\"), y = log10(1.5e+23),\n        xend = as.Date(\"2021-01-05\"), yend = log10(4.7e+22)),\n    curvature = -0.1,\n    arrow = arrow(length = unit(0.005, \"npc\"), type = \"closed\"),\n    color = \"#D8847C\",\n    linewidth = 0.1\n    ) +\n  geom_curve(\n    aes(x = as.Date(\"2012-06-15\"), y = log10(2.5e+24),\n        xend = as.Date(\"2020-01-28\"), yend = log10(4e+23)),\n    curvature = -0.1,\n    arrow = arrow(length = unit(0.005, \"npc\"), type = \"closed\"),\n    color = \"#476589\",\n    linewidth = 0.1\n    ) +\n  geom_curve(\n    aes(x = as.Date(\"2014-12-15\"), y = log10(3e+25),\n        xend = as.Date(\"2021-06-04\"), yend = log10(3e+24)),\n    curvature = -0.1,\n    arrow = arrow(length = unit(0.005, \"npc\"), type = \"closed\"),\n    color = \"#476589\",\n    linewidth = 0.1\n    ) +\n  geom_curve(\n    aes(x = as.Date(\"2016-12-15\"), y = log10(3e+26),\n        xend = as.Date(\"2021-12-04\"), yend = log10(5e+24)),\n    curvature = -0.1,\n    arrow = arrow(length = unit(0.005, \"npc\"), type = \"closed\"),\n    color = \"#476589\",\n    linewidth = 0.1\n    ) +\n10  geom_curve(\n    aes(x = as.Date(\"1938-01-01\"), y = log10(1e+21),\n        xend = as.Date(\"1938-01-01\"), yend = log10(1e+23)),\n    curvature = -0.3,\n    arrow = arrow(length = unit(0.005, \"npc\"), type = \"closed\"),\n    color = \"#999999\",\n    linewidth = 0.1\n    ) +\n  geom_curve( \n    aes(x = as.Date(\"1948-08-01\"), y = log10(2e+24),\n        xend = as.Date(\"1948-03-01\"), yend = log10(5e+24)),\n    curvature = -0.15,\n    arrow = arrow(length = unit(0.005, \"npc\"), type = \"closed\"),\n    color = \"#999999\",\n    linewidth = 0.1\n    ) +\n  geom_curve(\n    aes(x = as.Date(\"1957-06-01\"), y = log(0.1),\n        xend = as.Date(\"1956-01-01\"), yend = log10(0.05)),\n    curvature = -0.15,\n    arrow = arrow(length = unit(0.005, \"npc\"), type = \"closed\"),\n    color = \"#999999\",\n    linewidth = 0.1\n    ) +\n  geom_curve(\n    aes(x = as.Date(\"1998-06-01\"), y = log(0.1),\n        xend = as.Date(\"1997-01-01\"), yend = log10(0.05)),\n    curvature = -0.15,\n    arrow = arrow(length = unit(0.005, \"npc\"), type = \"closed\"),\n    color = \"#999999\",\n    linewidth = 0.1\n    ) +\n11  annotate(geom = \"richtext\",\n           x = as.Date(\"1950-07-05\"), y = log10(40), \n           label = \"&lt;span style='color:#9674B0;'&gt;&lt;b&gt;Theseus:&lt;/b&gt; built in 1950 and trained on around 40 floating point operations (FLOP)&lt;br&gt;&lt;i&gt;Theseus was a small robotic mouse, developed by Claude Shannon,&lt;br&gt;that could navigate a simple maze and remember its course.&lt;/i&gt;&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 0,\n           vjust = 0.5) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"1960-06-30\"), y = log10(9900), \n           label = \"&lt;span style='color:#B4477A;'&gt;&lt;b&gt;ADALINE:&lt;/b&gt; built in 1960 and trained on aroiund 9,900 FLOP&lt;br&gt;&lt;i&gt;An early single-layer artificial neural network.&lt;/i&gt;&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 0,\n           vjust = 0.75) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"1957-01-01\"), y = log10(695000), \n           label = \"&lt;span style='color:#B4477A;'&gt;&lt;b&gt;Perceptron Mark I:&lt;/b&gt; built in 1957/58, 695,000 FLOP&lt;br&gt;&lt;i&gt;Regarded as the first artificial neural network, it could visually distinguish cards marked on the left side&lt;br&gt;from those marked on the right, but it could not learn to recognize many other patterns.&lt;/i&gt;&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 0,\n           vjust = 0.8) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"1992-09-01\"), y = log10(1400000000), \n           label = \"&lt;span style='color:#476589;'&gt;Fuzzy NN&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 0,\n           vjust = 0.55) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"1980-04-01\"), y = log10(0.5e+08), \n           label = \"&lt;span style='color:#B4477A;'&gt;&lt;b&gt;Neocognitron:&lt;/b&gt; built in 1980, 228 million FLOP&lt;br&gt;&lt;i&gt;A precursor of modern vision systems. It could recognize&lt;br&gt;handwritten Japanese characters and a few other patterns.&lt;/i&gt;&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 0,\n           vjust = 0.8) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"1959-02-01\"), y = log10(6e+08), \n           label = \"&lt;span style='color:#9674B0;'&gt;Pandemonium (morse)&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 0.05,\n           vjust = 0.15) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"1959-10-01\"), y = log10(1.28e+08), \n           label = \"&lt;span style='color:#4B946C;'&gt;Samuel Neural Checkers&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 0.05,\n           vjust = 0) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"1987-03-06\"), y = log10(8e+10), \n           label = \"&lt;span style='color:#476589; text-align:center;'&gt;&lt;b&gt;NetTalk:&lt;/b&gt; 1987; 81 billion FLOP&lt;br&gt;&lt;i&gt;NetTalk was able to learn to pronounce some English text by given&lt;br&gt;text as input and matching it to phonetic transcriptions. Among its many&lt;br&gt;limitations, it did not perform the visual recognition of the text itself.&lt;/i&gt;&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 1,\n           vjust = 0.8) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"1989-12-01\"), y = log10(8.12e+10), \n           label = \"&lt;span style='color:#9674B0;'&gt;ALVINN&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 0,\n           vjust = 0.55) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"1989-12-01\"), y = log10(4.34e+10), \n           label = \"&lt;span style='color:#B4477A;'&gt;Zip CNN&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 0,\n           vjust = 0.55) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"1996-06-18\"), y = log10(1.29e+10), \n           label = \"&lt;span style='color:#B4477A;'&gt;System 11&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 0,\n           vjust = 0.55) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"1986-10-01\"), y = log10(1.24e+08), \n           label = \"&lt;span style='color:#9674B0;'&gt;Back-propagation&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 0.1,\n           vjust = 0) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"1989-01-01\"), y = log10(1.2e+08), \n           label = \"&lt;span style='color:#9674B0;'&gt;Innervator&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 0,\n           vjust = 0.55) +\n    annotate(geom = \"richtext\", \n           x = as.Date(\"1998-05-15\"), y = log10(2.27e+11), \n           label = \"&lt;span style='color:#476589;'&gt;RNN for speech&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 0,\n           vjust = 0.8) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"1992-05-01\"), y = log10(1.82e+13), \n           label = \"&lt;span style='color:#4B946C; text-align:center;'&gt;&lt;b&gt;TD-Gammon:&lt;/b&gt; 1992; 18 trillion FLOP&lt;br&gt;&lt;i&gt;TD-Gammon learned to play backgammon at a high&lt;br&gt;level, just below the top human players of the time.&lt;/i&gt;&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 1,\n           vjust = 0.8) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"1998-11-01\"), y = log10(2.81e+12), \n           label = \"&lt;span style='color:#B4477A;'&gt;LeNet-5&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 0,\n           vjust = 0.55) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"1997-11-15\"), y = log10(2.10e+13), \n           label = \"&lt;span style='color:#476589;'&gt;LSTM&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 0,\n           vjust = 0.55) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"2001-12-08\"), y = log10(6.3e+13), \n           label = \"&lt;span style='color:#B4477A;'&gt;Decision tree&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 1,\n           vjust = 0.15) +\n    annotate(geom = \"richtext\", \n           x = as.Date(\"2003-03-15\"), y = log10(1.3e+15), \n           label = \"&lt;span style='color:#476589;'&gt;NPLM&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 1,\n           vjust = 0.15) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"2003-07-15\"), y = log10(8e+15), \n           label = \"&lt;span style='color:#B4477A; text-align:center;'&gt;&lt;b&gt;AlexNet:&lt;/b&gt; 2012; 470 petaFLOP&lt;br&gt;&lt;i&gt;A pivotal early deep learning system, or neural network with many layers, that&lt;br&gt;could recognize images of objects such as dogs and cars at near-human level.&lt;/i&gt;&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 1,\n           vjust = 0.15) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"2006-06-15\"), y = log10(2e+17), \n           label = \"&lt;span style='color:#4B946C; text-align:center;'&gt;&lt;b&gt;MuZero:&lt;/b&gt; 2019; 48,000 petaFLOP&lt;br&gt;&lt;i&gt;MuZero is a single system that achieved superhuman performance at Go&lt;br&gt;chess, and shogi (Japanese chess) - all without ever being told the rules.&lt;/i&gt;&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 1,\n           vjust = 0.15) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"2009-06-15\"), y = log10(5e+18), \n           label = \"&lt;span style='color:#9674B0; text-align:center;'&gt;&lt;b&gt;AlphaFold:&lt;/b&gt; 2020; 100,000 petaFLOP&lt;br&gt;&lt;i&gt;AlphaFold was a major advance toward solving the protein-folding problem in biology.&lt;/i&gt;&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 1,\n           vjust = 0.15) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"2010-06-15\"), y = log10(2e+21),\n           label = \"&lt;span style='color:#476589; text-align:center;'&gt;&lt;b&gt;NEO:&lt;/b&gt; 2021; 1.1 million petaFLOP&lt;br&gt;&lt;i&gt;Recommendation systems like Facebook&apos;s NEO determine what you see on&lt;br&gt;your social media feed, online shopping, streaming services, and more.&lt;/i&gt;&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 1,\n           vjust = 0.15) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"2009-06-15\"), y = log10(7e+19),\n           label = \"&lt;span style='color:#4B946C; text-align:center;'&gt;&lt;b&gt;AlphaGo:&lt;/b&gt; 2016; 1.9 million petaFLOP&lt;br&gt;&lt;i&gt;AlphaGo defeated 18-time champion Lee Sedol at the ancient and highly&lt;br&gt;complex board game Go. The best Go players are no longer human.&lt;/i&gt;&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 1,\n           vjust = 0.15) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"2011-06-15\"), y = log10(5e+22),\n           label = \"&lt;span style='color:#D8847C; text-align:center;'&gt;&lt;b&gt;DALL-E:&lt;/b&gt; 2021; 47 million petaFLOP&lt;br&gt;&lt;i&gt;DALL-E can generate high-quality images from writteen descriptions.&lt;/i&gt;&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 1,\n           vjust = 0.15) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"2012-06-15\"), y = log10(5e+23),\n           label = \"&lt;span style='color:#476589; text-align:center;'&gt;&lt;b&gt;GPT-3:&lt;/b&gt; 2021; 314 million petaFLOP&lt;br&gt;&lt;i&gt;GPT-3 can produce high-quality text that is&lt;br&gt;often indistinguishable from human writing.&lt;/i&gt;&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 1,\n           vjust = 0.15) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"2014-12-15\"), y = log10(1e+25),\n           label = \"&lt;span style='color:#476589; text-align:center;'&gt;&lt;b&gt;PaLM:&lt;/b&gt; 2022; built in 2022 and trained on 2.5 petaFLOP&lt;br&gt;&lt;i&gt;PaLM can generate high-quality text, explain some jokes, cause & effect, and more.&lt;/i&gt;&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 1,\n           vjust = 0.15) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"2016-12-15\"), y = log10(1e+26),\n           label = \"&lt;span style='color:#476589; text-align:center;'&gt;&lt;b&gt;Minerva:&lt;/b&gt; 2022; built in 2022 and trained on 2.7 petaFLOP&lt;br&gt;&lt;i&gt;Minerva can solve complex mathematical problems at the college level.&lt;/i&gt;&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 1,\n           vjust = 0.15) +\n12    annotate(geom = \"richtext\",\n           x = as.Date(\"1938-01-01\"), y = log10(5e+21),\n           label = \"&lt;span style='color:#999999; text-align:center;'&gt;The data is shown on a logarithmic scale, so that&lt;br&gt;from each grid-line to the next it shows a 100-fold&lt;br&gt;increase in training computation.&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 0,\n           vjust = 0.25) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"1948-06-01\"), y = log10(3e+23),\n           label = \"&lt;span style='color:#999999; text-align:center;'&gt;Computation is measured in floating point operations (FLOP).&lt;br&gt;One FLOP is equivalent to one addition, subtraction,&lt;br&gt;multiplication, or division of two decimal numbers.&lt;/span&gt;\",\n           size = 2.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 0,\n           vjust = 0.15) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"1938-01-01\"), y = log10(7e+25),\n           label = \"&lt;span style='color:#5b5b5b; text-align:center;'&gt;Shown on the vertical axis in the &lt;b&gt;training computation&lt;/b&gt;&lt;br&gt;that was used to train the AI systems.&lt;/span&gt;\",\n           size = 3.75,\n           fill = NA,\n           label.color = NA,\n           hjust = 0,\n           vjust = 0.15) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1938-01-01\"), y = log10(0.6),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;&lt;i&gt;The first electronic computers&lt;br&gt;were developed in the 1940s&lt;/i&gt;&lt;/span&gt;\", \n           hjust = 0,\n           size = 2.85,\n           fill = NA,\n           label.color = NA) +\n13  annotate(geom = \"richtext\",\n           x = as.Date(\"1957-01-01\"), y = log(0.08),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;&lt;i&gt;1956: The Dartmouth workshop on AI, often&lt;br&gt;seen as the beginning of the field of AI research&lt;/i&gt;&lt;/span&gt;\",\n           hjust = 0,\n           size = 3,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1998-01-01\"), y = log(0.08),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;&lt;i&gt;1997: Deep Blue beats world&lt;br&gt;chess champion Garry Kasparov&lt;/i&gt;&lt;/span&gt;\",\n           hjust = 0,\n           size = 3,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n14  annotate(geom = \"richtext\",\n           x = as.Date(\"1938-01-01\"), y = log10(0.00003),\n           label = \"&lt;span style='color:#5b5b5b; text-align:center;'&gt;The data on training computation is taken from Sevilla et al. (2022) - Parameter, Compute, and Data Trends in Machine Learning.&lt;br&gt;It is estimated by the authors and comes with some uncertainty. The authors expect the estimated to be correct within a factor or two.&lt;br&gt;&lt;/span&gt;&lt;span style='color:#524E98;'&gt;OurWorldInData.org &lt;/span&gt;&lt;span style='color:#5b5b5b;'&gt;- Research and data to make progress against the world&apos;s largest problems.\",\n           size = 2.3,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 0,\n           vjust = 0.15) +\n  annotate(geom = \"richtext\", \n           x = as.Date(\"2022-01-01\"), y = log10(0.00005),\n           label = \"&lt;span style='color:#5b5b5b; text-align:center;'&gt;Licensed under &lt;/span&gt;&lt;span style='color:#524E98;'&gt;CC-BY  &lt;/span&gt;&lt;span style='color:#5b5b5b;'&gt;by the authors&lt;br&gt;Charlie Giattino, Edouard Mathieu, and Max Roser.\",\n           size = 2.3,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA,\n           hjust = 1,\n           vjust = 0.1) +\n15  annotate(geom = \"richtext\",\n           x = as.Date(\"1938-01-01\"), y = log10(10),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;10 FLOP&lt;/span&gt;\", \n           hjust = 0,\n           size = 3.25,\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1938-01-01\"), y = log10(1000),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;1,000 FLOP&lt;/span&gt;\", \n           hjust = 0,\n           size = 3.25,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1938-01-01\"), y = log10(1e+5),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;100,000 FLOP&lt;/span&gt;\", \n           hjust = 0,\n           size = 3.25,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1938-01-01\"), y = log10(1e+7),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;10 million FLOP&lt;/span&gt;\", \n           hjust = 0,\n           size = 3.25,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1938-01-01\"), y = log10(1e+9),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;1 billion FLOP&lt;/span&gt;\", \n           hjust = 0,\n           size = 3.25,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1938-01-01\"), y = log10(1e+11),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;100 billion FLOP&lt;/span&gt;\", \n           hjust = 0,\n           size = 3.25,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1938-01-01\"), y = log10(1e+13),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;10 trillion FLOP&lt;/span&gt;\", \n           hjust = 0,\n           size = 3.25,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1938-01-01\"), y = log10(1e+15),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;1 petaFLOP = 1 quadrillion FLOP&lt;/span&gt;\", \n           hjust = 0,\n           size = 3.25,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1938-01-01\"), y = log10(1e+17),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;100 petaFLOP&lt;/span&gt;\", \n           hjust = 0,\n           size = 3.25,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1938-01-01\"), y = log10(1e+19),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;10,000 petaFLOP&lt;/span&gt;\", \n           hjust = 0,\n           size = 3.25,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1938-01-01\"), y = log10(1e+21),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;1 million petaFLOP&lt;/span&gt;\", \n           hjust = 0,\n           size = 3.25,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1938-01-01\"), y = log10(1e+23),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;100 million petaFLOP&lt;/span&gt;\", \n           hjust = 0,\n           size = 3.25,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1938-01-01\"), y = log10(1e+25),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;10 billion petaFLOP&lt;/span&gt;\", \n           hjust = 0,\n           size = 3.25,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n16  annotate(geom = \"richtext\",\n           x = as.Date(\"2020-01-01\"), y = log10(0.03),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;2020&lt;/span&gt;\", \n           hjust = 0.5,\n           size = 4.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"2010-01-01\"), y = log10(0.03),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;2010&lt;/span&gt;\", \n           hjust = 0.5,\n           size = 4.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"2000-01-01\"), y = log10(0.03),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;2000&lt;/span&gt;\", \n           hjust = 0.5,\n           size = 4.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1990-01-01\"), y = log10(0.03),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;1990&lt;/span&gt;\", \n           hjust = 0.5,\n           size = 4.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1980-01-01\"), y = log10(0.03),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;1980&lt;/span&gt;\", \n           hjust = 0.5,\n           size = 4.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1970-01-01\"), y = log10(0.03),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;1970&lt;/span&gt;\", \n           hjust = 0.5,\n           size = 4.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1960-01-01\"), y = log10(0.03),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;1960&lt;/span&gt;\", \n           hjust = 0.5,\n           size = 4.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1950-01-01\"), y = log10(0.03),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;1950&lt;/span&gt;\", \n           hjust = 0.5,\n           size = 4.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1940-01-01\"), y = log10(0.03),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;1940&lt;/span&gt;\", \n           hjust = 0.5,\n           size = 4.5,\n           family = \"Open Sans\",\n           fill = NA,\n           label.color = NA) +\n17  annotate(geom = \"richtext\",\n           x = as.Date(\"1980-01-01\"), y = log10(2.3),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;Pre Deep Learning Era&lt;/span&gt;\", \n           hjust = 0.5,\n           size = 2.85,\n           family = \"Open Sans\",\n           fill = \"white\",\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"1980-01-01\"), y = log10(0.9),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;Training computation grew in line with Moore&apos;s law, doubling every 20 months&lt;/span&gt;\", \n           hjust = 0.5,\n           size = 2.85,\n           family = \"Open Sans\",\n           fill = NA, \n           lineheight = 0.5, \n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"2018-01-01\"), y = log10(2.3),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;Deep Learning Era&lt;/span&gt;\", \n           hjust = 0.5,\n           size = 2.85,\n           family = \"Open Sans\",\n           fill = \"white\",\n           label.color = NA) +\n  annotate(geom = \"richtext\",\n           x = as.Date(\"2018-01-01\"), y = log10(0.4),\n           label = \"&lt;span style='color:#5b5b5b;'&gt;Increases in training computation&lt;br&gt;accelerated, doubling roughlt&lt;br&gt;every 6 months&lt;/span&gt;\", \n           hjust = 0.5,\n           size = 2.85,\n           family = \"Open Sans\",\n           fill = NA, \n           label.color = NA) +\n18  scale_x_date(breaks = seq(as.Date(\"1940-01-01\"), as.Date(\"2020-01-01\"), by = \"10 years\"),\n               date_labels = \"%Y\") +\n19  scale_y_continuous(breaks = breaks_vals, labels = labels_vals) +\n20  scale_color_manual(values = c(\"#B4477A\", \"#4B946C\", \"#D8847C\", \"#476589\", \"#9674B0\"),\n                     labels = c(\"&lt;span style='color:#B4477A;'&gt;Vision&lt;/span&gt;\",\n                                \"&lt;span style='color:#4B946C;'&gt;Games&lt;/span&gt;\",\n                                \"&lt;span style='color:#D8847C;'&gt;Drawing&lt;/span&gt;\",\n                                \"&lt;span style='color:#476589;'&gt;Language&lt;/span&gt;\",\n                                \"&lt;span style='color:#9674B0;'&gt;Other&lt;/span&gt;\")) +\n21  theme_void(base_size = 11, base_family = \"Open Sans\") +\n22  labs(x = NULL,\n       y = NULL,\n23       color = \"The color indicates the domain of the AI system:\",\n24       title = \"&lt;span style='color:#5b5b5b;'&gt;&lt;b&gt;The rise of artificial intelligence over the last 8 decades:&lt;/b&gt; As training&lt;br&gt;computation has increased, AI systems have become more powerful&lt;/span&gt;\"\n       ) + \n25  theme(legend.position = c(0.357, 0.985),\n26        legend.direction = \"horizontal\",\n27        legend.spacing.x = unit(-0.1,'cm'),\n28        legend.title = element_markdown(family = \"Open Sans\", size = 10, color = \"#5b5b5b\"),\n29        legend.text = element_markdown(family = \"Open Sans\"),\n30        plot.title = element_markdown(hjust = 0.2275, vjust = 0.99, size = 18.5, family = \"Playfair Display\"),\n31        plot.title.position = \"plot\",\n32        plot.margin = margin(t = 0, r = 0, b = -1, l = 10),\n33        axis.text = element_blank())\n\n34logo &lt;- png::readPNG(here(\"images\", \"ourWorldDataLogo.png\"), native = TRUE)\n\n35plot +\n  inset_element(p = logo,\n                left = 0.865,\n                bottom = 0.89,\n                right = 0.95,\n                top = 1.15,\n                on_top = FALSE)\n\n\n\n1\n\nList of breaks for the y-axis (13 in total)\n\n2\n\nLabels for breaks for the y-axis\n\n3\n\nAdd the necessary Google Fonts (Playfair Display for the title, Open Sans for all other text)\n\n4\n\nggplot with publication date on the x-axis, log10 transformed training computation FLOP on the y-axis, color is the domain\n\n5\n\nBegins a series of geom_segment lines that create the background grid.\n\n6\n\nCreates the dark line from 1953-01-01 to 2025-01-01, at log10(2.5) on the y-axis\n\n7\n\nBegins the geom_segments that make up the x-axis ticks\n\n8\n\nAdds scatterplot points, with alpha = 0.85 (they will be colored by domain)\n\n9\n\nBegins the geom_curve arrows that point to individual AI systems from their label\n\n10\n\nBegins grey geom_curve arrows that point to axis point explanations\n\n11\n\nBegins annotations for individual AI systems of significants\n\n12\n\nBegins annotations for significant events or information on the x-axis\n\n13\n\nBegins annotations for significant events or information on the y-axis\n\n14\n\nBegins annotations for the bottom captions\n\n15\n\nBegins y-axis label annotations\n\n16\n\nBegins x-axis label annotations\n\n17\n\nBegins annotations for text overlayed onto the dark geom_segment spanning horizontally under 10 FLOP\n\n18\n\nScale date x-axis from 1940 - 2020 by 10 years, labeled by year (technically redundant now…)\n\n19\n\nScale continuous numerical y-axis by the pre-defined breaks and labels\n\n20\n\nManually scale the colors for each domain, specifically values and labels\n\n21\n\nSet theme_void as the underlying theme, make the base font size 11 and family Open Sans\n\n22\n\nRemove axes labels\n\n23\n\nSet the color legend title\n\n24\n\nSet the plot title (its “richtext”)\n\n25\n\nMove the legend to start the title at the left margin of the plot\n\n26\n\nSet the legend to a horizontal direction\n\n27\n\nMove the legend values for each color-domain closer\n\n28\n\nSet the legend title as an element_markdown, which allows us to use HTML and CSS code in “rich text”\n\n29\n\nSet the legend text as an element_markdown, which allows us to use HTML and CSS code in “rich text”\n\n30\n\nSet the plot title as an element_markdown, which allows us to use HTML and CSS code in “rich text”, position it to the left margin, set the font family to Playfair Display\n\n31\n\nPlaces the title inside the plot area, just above the main content\n\n32\n\nSet margins, top and right are the same, bottom is reduced by 1 grid unit and left is added by 10 grid units\n\n33\n\nRemove axis text\n\n34\n\nRead in the Our World In Data logo\n\n35\n\nAdd the logo on top of the plot, but under plot elements other than the background"
  }
]